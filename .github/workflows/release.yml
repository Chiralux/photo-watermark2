name: Release Windows (NSIS + ZIP)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to release (e.g., v0.1.0)'
        required: false

jobs:
  build-and-release-windows:
    name: Build and Release (Windows)
    runs-on: windows-latest
    permissions:
      contents: write  # allow creating releases and uploading assets

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer (Vite)
        run: npm run build:renderer
      
      - name: Build app (electron-builder)
        run: npx electron-builder --win --publish=never
        env:
          # 确保 electron-builder 不尝试发布
          GH_TOKEN: ''
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'

      - name: Compute artifact list
        id: artifacts
        shell: pwsh
        run: |
          $files = @(
            'release/Photo-Watermark-*.exe',
            'release/Photo-Watermark-*.exe.blockmap',
            'release/latest.yml',
            'release/Photo-Watermark-*.zip'
          )
          $expanded = $files | ForEach-Object { Get-ChildItem -Path $_ -ErrorAction SilentlyContinue } | Select-Object -ExpandProperty FullName
          if(-not $expanded){ throw 'No artifacts were found under release/*' }
          Write-Host "Artifacts:"; $expanded | ForEach-Object { Write-Host " - $_" }
          echo "files<<EOF" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          $expanded -join "`n" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          echo "EOF" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.artifacts.outputs.files }}
          draft: false
          prerelease: false
          tag_name: ${{ inputs.tag || github.ref_name }}
          name: ${{ inputs.tag || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
